#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ICPClientLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SERVICE")]
	public partial class TevaICPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertElementLine(ElementLine instance);
    partial void UpdateElementLine(ElementLine instance);
    partial void DeleteElementLine(ElementLine instance);
    partial void InsertSample(Sample instance);
    partial void UpdateSample(Sample instance);
    partial void DeleteSample(Sample instance);
    #endregion
		
		public TevaICPDataContext() : 
				base(global::ICPClientLinq.Properties.Settings.Default.TevaICPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TevaICPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TevaICPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TevaICPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TevaICPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ElementLine> ElementLines
		{
			get
			{
				return this.GetTable<ElementLine>();
			}
		}
		
		public System.Data.Linq.Table<Sample> Samples
		{
			get
			{
				return this.GetTable<Sample>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElementLines")]
	public partial class ElementLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleId;
		
		private short _LineIndex;
		
		private string _ElementSymbol;
		
		private string _Wavelength;
		
		private short _iOrder;
		
		private System.Nullable<short> _DuplicateNumber;
		
		private string _ElementName;
		
		private System.Nullable<short> _Mass;
		
		private string _Units;
		
		private bool _InternalStandard;
		
		private bool _IEC;
		
		private double _LowCheckWarn;
		
		private double _HighCheckWarn;
		
		private double _LowCheckFail;
		
		private double _HighCheckFail;
		
		private System.Nullable<double> _LowPrintLimit;
		
		private System.Nullable<double> _HighPrintLimit;
		
		private int _CheckResultCode;
		
		private double _CheckValue;
		
		private string _CheckUnits;
		
		private string _IntStdReference;
		
		private bool _PerformCheck;
		
		private bool _PerformLowPrtLimCheck;
		
		private bool _PerformHighPrtLimCheck;
		
		private bool _PerformMDLCheck;
		
		private bool _PerformMQLCheck;
		
		private bool _UseSigFigs;
		
		private System.Nullable<byte> _SignificantFigures;
		
		private System.Nullable<double> _CalibrationCorrCoeff;
		
		private System.Nullable<double> _ConcentrationFactor;
		
		private System.Nullable<double> _AverageResult;
		
		private System.Nullable<double> _StandardDeviation;
		
		private System.Nullable<double> _PercentRSD;
		
		private string _FailFlags;
		
		private System.Nullable<char> _CheckFlag;
		
		private string _PrintAverageResult;
		
		private System.Nullable<double> _AutoDilutionFactor;
		
		private bool _Reprocessed;
		
		private System.Nullable<double> _MDL;
		
		private System.Nullable<double> _MQL;
		
		private EntityRef<Sample> _Sample;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleIdChanging(int value);
    partial void OnSampleIdChanged();
    partial void OnLineIndexChanging(short value);
    partial void OnLineIndexChanged();
    partial void OnElementSymbolChanging(string value);
    partial void OnElementSymbolChanged();
    partial void OnWavelengthChanging(string value);
    partial void OnWavelengthChanged();
    partial void OniOrderChanging(short value);
    partial void OniOrderChanged();
    partial void OnDuplicateNumberChanging(System.Nullable<short> value);
    partial void OnDuplicateNumberChanged();
    partial void OnElementNameChanging(string value);
    partial void OnElementNameChanged();
    partial void OnMassChanging(System.Nullable<short> value);
    partial void OnMassChanged();
    partial void OnUnitsChanging(string value);
    partial void OnUnitsChanged();
    partial void OnInternalStandardChanging(bool value);
    partial void OnInternalStandardChanged();
    partial void OnIECChanging(bool value);
    partial void OnIECChanged();
    partial void OnLowCheckWarnChanging(double value);
    partial void OnLowCheckWarnChanged();
    partial void OnHighCheckWarnChanging(double value);
    partial void OnHighCheckWarnChanged();
    partial void OnLowCheckFailChanging(double value);
    partial void OnLowCheckFailChanged();
    partial void OnHighCheckFailChanging(double value);
    partial void OnHighCheckFailChanged();
    partial void OnLowPrintLimitChanging(System.Nullable<double> value);
    partial void OnLowPrintLimitChanged();
    partial void OnHighPrintLimitChanging(System.Nullable<double> value);
    partial void OnHighPrintLimitChanged();
    partial void OnCheckResultCodeChanging(int value);
    partial void OnCheckResultCodeChanged();
    partial void OnCheckValueChanging(double value);
    partial void OnCheckValueChanged();
    partial void OnCheckUnitsChanging(string value);
    partial void OnCheckUnitsChanged();
    partial void OnIntStdReferenceChanging(string value);
    partial void OnIntStdReferenceChanged();
    partial void OnPerformCheckChanging(bool value);
    partial void OnPerformCheckChanged();
    partial void OnPerformLowPrtLimCheckChanging(bool value);
    partial void OnPerformLowPrtLimCheckChanged();
    partial void OnPerformHighPrtLimCheckChanging(bool value);
    partial void OnPerformHighPrtLimCheckChanged();
    partial void OnPerformMDLCheckChanging(bool value);
    partial void OnPerformMDLCheckChanged();
    partial void OnPerformMQLCheckChanging(bool value);
    partial void OnPerformMQLCheckChanged();
    partial void OnUseSigFigsChanging(bool value);
    partial void OnUseSigFigsChanged();
    partial void OnSignificantFiguresChanging(System.Nullable<byte> value);
    partial void OnSignificantFiguresChanged();
    partial void OnCalibrationCorrCoeffChanging(System.Nullable<double> value);
    partial void OnCalibrationCorrCoeffChanged();
    partial void OnConcentrationFactorChanging(System.Nullable<double> value);
    partial void OnConcentrationFactorChanged();
    partial void OnAverageResultChanging(System.Nullable<double> value);
    partial void OnAverageResultChanged();
    partial void OnStandardDeviationChanging(System.Nullable<double> value);
    partial void OnStandardDeviationChanged();
    partial void OnPercentRSDChanging(System.Nullable<double> value);
    partial void OnPercentRSDChanged();
    partial void OnFailFlagsChanging(string value);
    partial void OnFailFlagsChanged();
    partial void OnCheckFlagChanging(System.Nullable<char> value);
    partial void OnCheckFlagChanged();
    partial void OnPrintAverageResultChanging(string value);
    partial void OnPrintAverageResultChanged();
    partial void OnAutoDilutionFactorChanging(System.Nullable<double> value);
    partial void OnAutoDilutionFactorChanged();
    partial void OnReprocessedChanging(bool value);
    partial void OnReprocessedChanged();
    partial void OnMDLChanging(System.Nullable<double> value);
    partial void OnMDLChanged();
    partial void OnMQLChanging(System.Nullable<double> value);
    partial void OnMQLChanged();
    #endregion
		
		public ElementLine()
		{
			this._Sample = default(EntityRef<Sample>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					if (this._Sample.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineIndex", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short LineIndex
		{
			get
			{
				return this._LineIndex;
			}
			set
			{
				if ((this._LineIndex != value))
				{
					this.OnLineIndexChanging(value);
					this.SendPropertyChanging();
					this._LineIndex = value;
					this.SendPropertyChanged("LineIndex");
					this.OnLineIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementSymbol", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string ElementSymbol
		{
			get
			{
				return this._ElementSymbol;
			}
			set
			{
				if ((this._ElementSymbol != value))
				{
					this.OnElementSymbolChanging(value);
					this.SendPropertyChanging();
					this._ElementSymbol = value;
					this.SendPropertyChanged("ElementSymbol");
					this.OnElementSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wavelength", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Wavelength
		{
			get
			{
				return this._Wavelength;
			}
			set
			{
				if ((this._Wavelength != value))
				{
					this.OnWavelengthChanging(value);
					this.SendPropertyChanging();
					this._Wavelength = value;
					this.SendPropertyChanged("Wavelength");
					this.OnWavelengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOrder", DbType="SmallInt NOT NULL")]
		public short iOrder
		{
			get
			{
				return this._iOrder;
			}
			set
			{
				if ((this._iOrder != value))
				{
					this.OniOrderChanging(value);
					this.SendPropertyChanging();
					this._iOrder = value;
					this.SendPropertyChanged("iOrder");
					this.OniOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuplicateNumber", DbType="SmallInt")]
		public System.Nullable<short> DuplicateNumber
		{
			get
			{
				return this._DuplicateNumber;
			}
			set
			{
				if ((this._DuplicateNumber != value))
				{
					this.OnDuplicateNumberChanging(value);
					this.SendPropertyChanging();
					this._DuplicateNumber = value;
					this.SendPropertyChanged("DuplicateNumber");
					this.OnDuplicateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string ElementName
		{
			get
			{
				return this._ElementName;
			}
			set
			{
				if ((this._ElementName != value))
				{
					this.OnElementNameChanging(value);
					this.SendPropertyChanging();
					this._ElementName = value;
					this.SendPropertyChanged("ElementName");
					this.OnElementNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass", DbType="SmallInt")]
		public System.Nullable<short> Mass
		{
			get
			{
				return this._Mass;
			}
			set
			{
				if ((this._Mass != value))
				{
					this.OnMassChanging(value);
					this.SendPropertyChanging();
					this._Mass = value;
					this.SendPropertyChanged("Mass");
					this.OnMassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="NVarChar(10)")]
		public string Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalStandard", DbType="Bit NOT NULL")]
		public bool InternalStandard
		{
			get
			{
				return this._InternalStandard;
			}
			set
			{
				if ((this._InternalStandard != value))
				{
					this.OnInternalStandardChanging(value);
					this.SendPropertyChanging();
					this._InternalStandard = value;
					this.SendPropertyChanged("InternalStandard");
					this.OnInternalStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IEC", DbType="Bit NOT NULL")]
		public bool IEC
		{
			get
			{
				return this._IEC;
			}
			set
			{
				if ((this._IEC != value))
				{
					this.OnIECChanging(value);
					this.SendPropertyChanging();
					this._IEC = value;
					this.SendPropertyChanged("IEC");
					this.OnIECChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowCheckWarn", DbType="Float NOT NULL")]
		public double LowCheckWarn
		{
			get
			{
				return this._LowCheckWarn;
			}
			set
			{
				if ((this._LowCheckWarn != value))
				{
					this.OnLowCheckWarnChanging(value);
					this.SendPropertyChanging();
					this._LowCheckWarn = value;
					this.SendPropertyChanged("LowCheckWarn");
					this.OnLowCheckWarnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighCheckWarn", DbType="Float NOT NULL")]
		public double HighCheckWarn
		{
			get
			{
				return this._HighCheckWarn;
			}
			set
			{
				if ((this._HighCheckWarn != value))
				{
					this.OnHighCheckWarnChanging(value);
					this.SendPropertyChanging();
					this._HighCheckWarn = value;
					this.SendPropertyChanged("HighCheckWarn");
					this.OnHighCheckWarnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowCheckFail", DbType="Float NOT NULL")]
		public double LowCheckFail
		{
			get
			{
				return this._LowCheckFail;
			}
			set
			{
				if ((this._LowCheckFail != value))
				{
					this.OnLowCheckFailChanging(value);
					this.SendPropertyChanging();
					this._LowCheckFail = value;
					this.SendPropertyChanged("LowCheckFail");
					this.OnLowCheckFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighCheckFail", DbType="Float NOT NULL")]
		public double HighCheckFail
		{
			get
			{
				return this._HighCheckFail;
			}
			set
			{
				if ((this._HighCheckFail != value))
				{
					this.OnHighCheckFailChanging(value);
					this.SendPropertyChanging();
					this._HighCheckFail = value;
					this.SendPropertyChanged("HighCheckFail");
					this.OnHighCheckFailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrintLimit", DbType="Float")]
		public System.Nullable<double> LowPrintLimit
		{
			get
			{
				return this._LowPrintLimit;
			}
			set
			{
				if ((this._LowPrintLimit != value))
				{
					this.OnLowPrintLimitChanging(value);
					this.SendPropertyChanging();
					this._LowPrintLimit = value;
					this.SendPropertyChanged("LowPrintLimit");
					this.OnLowPrintLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrintLimit", DbType="Float")]
		public System.Nullable<double> HighPrintLimit
		{
			get
			{
				return this._HighPrintLimit;
			}
			set
			{
				if ((this._HighPrintLimit != value))
				{
					this.OnHighPrintLimitChanging(value);
					this.SendPropertyChanging();
					this._HighPrintLimit = value;
					this.SendPropertyChanged("HighPrintLimit");
					this.OnHighPrintLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResultCode", DbType="Int NOT NULL")]
		public int CheckResultCode
		{
			get
			{
				return this._CheckResultCode;
			}
			set
			{
				if ((this._CheckResultCode != value))
				{
					this.OnCheckResultCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckResultCode = value;
					this.SendPropertyChanged("CheckResultCode");
					this.OnCheckResultCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckValue", DbType="Float NOT NULL")]
		public double CheckValue
		{
			get
			{
				return this._CheckValue;
			}
			set
			{
				if ((this._CheckValue != value))
				{
					this.OnCheckValueChanging(value);
					this.SendPropertyChanging();
					this._CheckValue = value;
					this.SendPropertyChanged("CheckValue");
					this.OnCheckValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUnits", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string CheckUnits
		{
			get
			{
				return this._CheckUnits;
			}
			set
			{
				if ((this._CheckUnits != value))
				{
					this.OnCheckUnitsChanging(value);
					this.SendPropertyChanging();
					this._CheckUnits = value;
					this.SendPropertyChanged("CheckUnits");
					this.OnCheckUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntStdReference", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string IntStdReference
		{
			get
			{
				return this._IntStdReference;
			}
			set
			{
				if ((this._IntStdReference != value))
				{
					this.OnIntStdReferenceChanging(value);
					this.SendPropertyChanging();
					this._IntStdReference = value;
					this.SendPropertyChanged("IntStdReference");
					this.OnIntStdReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformCheck", DbType="Bit NOT NULL")]
		public bool PerformCheck
		{
			get
			{
				return this._PerformCheck;
			}
			set
			{
				if ((this._PerformCheck != value))
				{
					this.OnPerformCheckChanging(value);
					this.SendPropertyChanging();
					this._PerformCheck = value;
					this.SendPropertyChanged("PerformCheck");
					this.OnPerformCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformLowPrtLimCheck", DbType="Bit NOT NULL")]
		public bool PerformLowPrtLimCheck
		{
			get
			{
				return this._PerformLowPrtLimCheck;
			}
			set
			{
				if ((this._PerformLowPrtLimCheck != value))
				{
					this.OnPerformLowPrtLimCheckChanging(value);
					this.SendPropertyChanging();
					this._PerformLowPrtLimCheck = value;
					this.SendPropertyChanged("PerformLowPrtLimCheck");
					this.OnPerformLowPrtLimCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformHighPrtLimCheck", DbType="Bit NOT NULL")]
		public bool PerformHighPrtLimCheck
		{
			get
			{
				return this._PerformHighPrtLimCheck;
			}
			set
			{
				if ((this._PerformHighPrtLimCheck != value))
				{
					this.OnPerformHighPrtLimCheckChanging(value);
					this.SendPropertyChanging();
					this._PerformHighPrtLimCheck = value;
					this.SendPropertyChanged("PerformHighPrtLimCheck");
					this.OnPerformHighPrtLimCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformMDLCheck", DbType="Bit NOT NULL")]
		public bool PerformMDLCheck
		{
			get
			{
				return this._PerformMDLCheck;
			}
			set
			{
				if ((this._PerformMDLCheck != value))
				{
					this.OnPerformMDLCheckChanging(value);
					this.SendPropertyChanging();
					this._PerformMDLCheck = value;
					this.SendPropertyChanged("PerformMDLCheck");
					this.OnPerformMDLCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformMQLCheck", DbType="Bit NOT NULL")]
		public bool PerformMQLCheck
		{
			get
			{
				return this._PerformMQLCheck;
			}
			set
			{
				if ((this._PerformMQLCheck != value))
				{
					this.OnPerformMQLCheckChanging(value);
					this.SendPropertyChanging();
					this._PerformMQLCheck = value;
					this.SendPropertyChanged("PerformMQLCheck");
					this.OnPerformMQLCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSigFigs", DbType="Bit NOT NULL")]
		public bool UseSigFigs
		{
			get
			{
				return this._UseSigFigs;
			}
			set
			{
				if ((this._UseSigFigs != value))
				{
					this.OnUseSigFigsChanging(value);
					this.SendPropertyChanging();
					this._UseSigFigs = value;
					this.SendPropertyChanged("UseSigFigs");
					this.OnUseSigFigsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignificantFigures", DbType="TinyInt")]
		public System.Nullable<byte> SignificantFigures
		{
			get
			{
				return this._SignificantFigures;
			}
			set
			{
				if ((this._SignificantFigures != value))
				{
					this.OnSignificantFiguresChanging(value);
					this.SendPropertyChanging();
					this._SignificantFigures = value;
					this.SendPropertyChanged("SignificantFigures");
					this.OnSignificantFiguresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationCorrCoeff", DbType="Float")]
		public System.Nullable<double> CalibrationCorrCoeff
		{
			get
			{
				return this._CalibrationCorrCoeff;
			}
			set
			{
				if ((this._CalibrationCorrCoeff != value))
				{
					this.OnCalibrationCorrCoeffChanging(value);
					this.SendPropertyChanging();
					this._CalibrationCorrCoeff = value;
					this.SendPropertyChanged("CalibrationCorrCoeff");
					this.OnCalibrationCorrCoeffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcentrationFactor", DbType="Float")]
		public System.Nullable<double> ConcentrationFactor
		{
			get
			{
				return this._ConcentrationFactor;
			}
			set
			{
				if ((this._ConcentrationFactor != value))
				{
					this.OnConcentrationFactorChanging(value);
					this.SendPropertyChanging();
					this._ConcentrationFactor = value;
					this.SendPropertyChanged("ConcentrationFactor");
					this.OnConcentrationFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageResult", DbType="Float")]
		public System.Nullable<double> AverageResult
		{
			get
			{
				return this._AverageResult;
			}
			set
			{
				if ((this._AverageResult != value))
				{
					this.OnAverageResultChanging(value);
					this.SendPropertyChanging();
					this._AverageResult = value;
					this.SendPropertyChanged("AverageResult");
					this.OnAverageResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardDeviation", DbType="Float")]
		public System.Nullable<double> StandardDeviation
		{
			get
			{
				return this._StandardDeviation;
			}
			set
			{
				if ((this._StandardDeviation != value))
				{
					this.OnStandardDeviationChanging(value);
					this.SendPropertyChanging();
					this._StandardDeviation = value;
					this.SendPropertyChanged("StandardDeviation");
					this.OnStandardDeviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentRSD", DbType="Float")]
		public System.Nullable<double> PercentRSD
		{
			get
			{
				return this._PercentRSD;
			}
			set
			{
				if ((this._PercentRSD != value))
				{
					this.OnPercentRSDChanging(value);
					this.SendPropertyChanging();
					this._PercentRSD = value;
					this.SendPropertyChanged("PercentRSD");
					this.OnPercentRSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailFlags", DbType="Char(6)")]
		public string FailFlags
		{
			get
			{
				return this._FailFlags;
			}
			set
			{
				if ((this._FailFlags != value))
				{
					this.OnFailFlagsChanging(value);
					this.SendPropertyChanging();
					this._FailFlags = value;
					this.SendPropertyChanged("FailFlags");
					this.OnFailFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckFlag", DbType="Char(1)")]
		public System.Nullable<char> CheckFlag
		{
			get
			{
				return this._CheckFlag;
			}
			set
			{
				if ((this._CheckFlag != value))
				{
					this.OnCheckFlagChanging(value);
					this.SendPropertyChanging();
					this._CheckFlag = value;
					this.SendPropertyChanged("CheckFlag");
					this.OnCheckFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintAverageResult", DbType="NVarChar(16)")]
		public string PrintAverageResult
		{
			get
			{
				return this._PrintAverageResult;
			}
			set
			{
				if ((this._PrintAverageResult != value))
				{
					this.OnPrintAverageResultChanging(value);
					this.SendPropertyChanging();
					this._PrintAverageResult = value;
					this.SendPropertyChanged("PrintAverageResult");
					this.OnPrintAverageResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoDilutionFactor", DbType="Float")]
		public System.Nullable<double> AutoDilutionFactor
		{
			get
			{
				return this._AutoDilutionFactor;
			}
			set
			{
				if ((this._AutoDilutionFactor != value))
				{
					this.OnAutoDilutionFactorChanging(value);
					this.SendPropertyChanging();
					this._AutoDilutionFactor = value;
					this.SendPropertyChanged("AutoDilutionFactor");
					this.OnAutoDilutionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reprocessed", DbType="Bit NOT NULL")]
		public bool Reprocessed
		{
			get
			{
				return this._Reprocessed;
			}
			set
			{
				if ((this._Reprocessed != value))
				{
					this.OnReprocessedChanging(value);
					this.SendPropertyChanging();
					this._Reprocessed = value;
					this.SendPropertyChanged("Reprocessed");
					this.OnReprocessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDL", DbType="Float")]
		public System.Nullable<double> MDL
		{
			get
			{
				return this._MDL;
			}
			set
			{
				if ((this._MDL != value))
				{
					this.OnMDLChanging(value);
					this.SendPropertyChanging();
					this._MDL = value;
					this.SendPropertyChanged("MDL");
					this.OnMDLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MQL", DbType="Float")]
		public System.Nullable<double> MQL
		{
			get
			{
				return this._MQL;
			}
			set
			{
				if ((this._MQL != value))
				{
					this.OnMQLChanging(value);
					this.SendPropertyChanging();
					this._MQL = value;
					this.SendPropertyChanged("MQL");
					this.OnMQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_ElementLine", Storage="_Sample", ThisKey="SampleId", OtherKey="Id", IsForeignKey=true)]
		public Sample Sample
		{
			get
			{
				return this._Sample.Entity;
			}
			set
			{
				Sample previousValue = this._Sample.Entity;
				if (((previousValue != value) 
							|| (this._Sample.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sample.Entity = null;
						previousValue.ElementLines.Remove(this);
					}
					this._Sample.Entity = value;
					if ((value != null))
					{
						value.ElementLines.Add(this);
						this._SampleId = value.Id;
					}
					else
					{
						this._SampleId = default(int);
					}
					this.SendPropertyChanged("Sample");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Samples")]
	public partial class Sample : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _EchelleId;
		
		private int _LibraryId;
		
		private int _MethodId;
		
		private System.Nullable<int> _SequenceId;
		
		private int _UserId;
		
		private int _CheckTableNameId;
		
		private int _InstrumentId;
		
		private System.Nullable<int> _SampleDataId;
		
		private System.Nullable<int> _FullFrameCatalogId;
		
		private int _SampleTypeId;
		
		private System.Nullable<int> _ModeId;
		
		private System.Nullable<int> _ReferenceSampleID;
		
		private System.DateTime _AcquireDate;
		
		private System.DateTime _StorageDate;
		
		private System.Nullable<short> _Elements;
		
		private System.Nullable<short> _InternalStandards;
		
		private System.Nullable<double> _CorrectionFactor;
		
		private System.Nullable<double> _SampleWeight;
		
		private System.Nullable<double> _NominalWeight;
		
		private System.Nullable<double> _InitialVolume;
		
		private System.Nullable<double> _FinalVolume;
		
		private System.Nullable<double> _AdjustmentFactor;
		
		private bool _Active;
		
		private bool _SemiQuant;
		
		private bool _Reprocessed;
		
		private bool _CalculateByMSA;
		
		private string _Comment;
		
		private string _Custom1;
		
		private string _Custom2;
		
		private string _Custom3;
		
		private string _Custom4;
		
		private byte _CFCalcType;
		
		private int _PostProcessParentId;
		
		private EntitySet<ElementLine> _ElementLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEchelleIdChanging(int value);
    partial void OnEchelleIdChanged();
    partial void OnLibraryIdChanging(int value);
    partial void OnLibraryIdChanged();
    partial void OnMethodIdChanging(int value);
    partial void OnMethodIdChanged();
    partial void OnSequenceIdChanging(System.Nullable<int> value);
    partial void OnSequenceIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCheckTableNameIdChanging(int value);
    partial void OnCheckTableNameIdChanged();
    partial void OnInstrumentIdChanging(int value);
    partial void OnInstrumentIdChanged();
    partial void OnSampleDataIdChanging(System.Nullable<int> value);
    partial void OnSampleDataIdChanged();
    partial void OnFullFrameCatalogIdChanging(System.Nullable<int> value);
    partial void OnFullFrameCatalogIdChanged();
    partial void OnSampleTypeIdChanging(int value);
    partial void OnSampleTypeIdChanged();
    partial void OnModeIdChanging(System.Nullable<int> value);
    partial void OnModeIdChanged();
    partial void OnReferenceSampleIDChanging(System.Nullable<int> value);
    partial void OnReferenceSampleIDChanged();
    partial void OnAcquireDateChanging(System.DateTime value);
    partial void OnAcquireDateChanged();
    partial void OnStorageDateChanging(System.DateTime value);
    partial void OnStorageDateChanged();
    partial void OnElementsChanging(System.Nullable<short> value);
    partial void OnElementsChanged();
    partial void OnInternalStandardsChanging(System.Nullable<short> value);
    partial void OnInternalStandardsChanged();
    partial void OnCorrectionFactorChanging(System.Nullable<double> value);
    partial void OnCorrectionFactorChanged();
    partial void OnSampleWeightChanging(System.Nullable<double> value);
    partial void OnSampleWeightChanged();
    partial void OnNominalWeightChanging(System.Nullable<double> value);
    partial void OnNominalWeightChanged();
    partial void OnInitialVolumeChanging(System.Nullable<double> value);
    partial void OnInitialVolumeChanged();
    partial void OnFinalVolumeChanging(System.Nullable<double> value);
    partial void OnFinalVolumeChanged();
    partial void OnAdjustmentFactorChanging(System.Nullable<double> value);
    partial void OnAdjustmentFactorChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSemiQuantChanging(bool value);
    partial void OnSemiQuantChanged();
    partial void OnReprocessedChanging(bool value);
    partial void OnReprocessedChanged();
    partial void OnCalculateByMSAChanging(bool value);
    partial void OnCalculateByMSAChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCustom1Changing(string value);
    partial void OnCustom1Changed();
    partial void OnCustom2Changing(string value);
    partial void OnCustom2Changed();
    partial void OnCustom3Changing(string value);
    partial void OnCustom3Changed();
    partial void OnCustom4Changing(string value);
    partial void OnCustom4Changed();
    partial void OnCFCalcTypeChanging(byte value);
    partial void OnCFCalcTypeChanged();
    partial void OnPostProcessParentIdChanging(int value);
    partial void OnPostProcessParentIdChanged();
    #endregion
		
		public Sample()
		{
			this._ElementLines = new EntitySet<ElementLine>(new Action<ElementLine>(this.attach_ElementLines), new Action<ElementLine>(this.detach_ElementLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EchelleId", DbType="Int NOT NULL")]
		public int EchelleId
		{
			get
			{
				return this._EchelleId;
			}
			set
			{
				if ((this._EchelleId != value))
				{
					this.OnEchelleIdChanging(value);
					this.SendPropertyChanging();
					this._EchelleId = value;
					this.SendPropertyChanged("EchelleId");
					this.OnEchelleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibraryId", DbType="Int NOT NULL")]
		public int LibraryId
		{
			get
			{
				return this._LibraryId;
			}
			set
			{
				if ((this._LibraryId != value))
				{
					this.OnLibraryIdChanging(value);
					this.SendPropertyChanging();
					this._LibraryId = value;
					this.SendPropertyChanged("LibraryId");
					this.OnLibraryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int NOT NULL")]
		public int MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this.OnMethodIdChanging(value);
					this.SendPropertyChanging();
					this._MethodId = value;
					this.SendPropertyChanged("MethodId");
					this.OnMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceId", DbType="Int")]
		public System.Nullable<int> SequenceId
		{
			get
			{
				return this._SequenceId;
			}
			set
			{
				if ((this._SequenceId != value))
				{
					this.OnSequenceIdChanging(value);
					this.SendPropertyChanging();
					this._SequenceId = value;
					this.SendPropertyChanged("SequenceId");
					this.OnSequenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTableNameId", DbType="Int NOT NULL")]
		public int CheckTableNameId
		{
			get
			{
				return this._CheckTableNameId;
			}
			set
			{
				if ((this._CheckTableNameId != value))
				{
					this.OnCheckTableNameIdChanging(value);
					this.SendPropertyChanging();
					this._CheckTableNameId = value;
					this.SendPropertyChanged("CheckTableNameId");
					this.OnCheckTableNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstrumentId", DbType="Int NOT NULL")]
		public int InstrumentId
		{
			get
			{
				return this._InstrumentId;
			}
			set
			{
				if ((this._InstrumentId != value))
				{
					this.OnInstrumentIdChanging(value);
					this.SendPropertyChanging();
					this._InstrumentId = value;
					this.SendPropertyChanged("InstrumentId");
					this.OnInstrumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleDataId", DbType="Int")]
		public System.Nullable<int> SampleDataId
		{
			get
			{
				return this._SampleDataId;
			}
			set
			{
				if ((this._SampleDataId != value))
				{
					this.OnSampleDataIdChanging(value);
					this.SendPropertyChanging();
					this._SampleDataId = value;
					this.SendPropertyChanged("SampleDataId");
					this.OnSampleDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullFrameCatalogId", DbType="Int")]
		public System.Nullable<int> FullFrameCatalogId
		{
			get
			{
				return this._FullFrameCatalogId;
			}
			set
			{
				if ((this._FullFrameCatalogId != value))
				{
					this.OnFullFrameCatalogIdChanging(value);
					this.SendPropertyChanging();
					this._FullFrameCatalogId = value;
					this.SendPropertyChanged("FullFrameCatalogId");
					this.OnFullFrameCatalogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeId", DbType="Int NOT NULL")]
		public int SampleTypeId
		{
			get
			{
				return this._SampleTypeId;
			}
			set
			{
				if ((this._SampleTypeId != value))
				{
					this.OnSampleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeId = value;
					this.SendPropertyChanged("SampleTypeId");
					this.OnSampleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeId", DbType="Int")]
		public System.Nullable<int> ModeId
		{
			get
			{
				return this._ModeId;
			}
			set
			{
				if ((this._ModeId != value))
				{
					this.OnModeIdChanging(value);
					this.SendPropertyChanging();
					this._ModeId = value;
					this.SendPropertyChanged("ModeId");
					this.OnModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceSampleID", DbType="Int")]
		public System.Nullable<int> ReferenceSampleID
		{
			get
			{
				return this._ReferenceSampleID;
			}
			set
			{
				if ((this._ReferenceSampleID != value))
				{
					this.OnReferenceSampleIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceSampleID = value;
					this.SendPropertyChanged("ReferenceSampleID");
					this.OnReferenceSampleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquireDate", DbType="DateTime NOT NULL")]
		public System.DateTime AcquireDate
		{
			get
			{
				return this._AcquireDate;
			}
			set
			{
				if ((this._AcquireDate != value))
				{
					this.OnAcquireDateChanging(value);
					this.SendPropertyChanging();
					this._AcquireDate = value;
					this.SendPropertyChanged("AcquireDate");
					this.OnAcquireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageDate", DbType="DateTime NOT NULL")]
		public System.DateTime StorageDate
		{
			get
			{
				return this._StorageDate;
			}
			set
			{
				if ((this._StorageDate != value))
				{
					this.OnStorageDateChanging(value);
					this.SendPropertyChanging();
					this._StorageDate = value;
					this.SendPropertyChanged("StorageDate");
					this.OnStorageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elements", DbType="SmallInt")]
		public System.Nullable<short> Elements
		{
			get
			{
				return this._Elements;
			}
			set
			{
				if ((this._Elements != value))
				{
					this.OnElementsChanging(value);
					this.SendPropertyChanging();
					this._Elements = value;
					this.SendPropertyChanged("Elements");
					this.OnElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalStandards", DbType="SmallInt")]
		public System.Nullable<short> InternalStandards
		{
			get
			{
				return this._InternalStandards;
			}
			set
			{
				if ((this._InternalStandards != value))
				{
					this.OnInternalStandardsChanging(value);
					this.SendPropertyChanging();
					this._InternalStandards = value;
					this.SendPropertyChanged("InternalStandards");
					this.OnInternalStandardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectionFactor", DbType="Float")]
		public System.Nullable<double> CorrectionFactor
		{
			get
			{
				return this._CorrectionFactor;
			}
			set
			{
				if ((this._CorrectionFactor != value))
				{
					this.OnCorrectionFactorChanging(value);
					this.SendPropertyChanging();
					this._CorrectionFactor = value;
					this.SendPropertyChanged("CorrectionFactor");
					this.OnCorrectionFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleWeight", DbType="Float")]
		public System.Nullable<double> SampleWeight
		{
			get
			{
				return this._SampleWeight;
			}
			set
			{
				if ((this._SampleWeight != value))
				{
					this.OnSampleWeightChanging(value);
					this.SendPropertyChanging();
					this._SampleWeight = value;
					this.SendPropertyChanged("SampleWeight");
					this.OnSampleWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NominalWeight", DbType="Float")]
		public System.Nullable<double> NominalWeight
		{
			get
			{
				return this._NominalWeight;
			}
			set
			{
				if ((this._NominalWeight != value))
				{
					this.OnNominalWeightChanging(value);
					this.SendPropertyChanging();
					this._NominalWeight = value;
					this.SendPropertyChanged("NominalWeight");
					this.OnNominalWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialVolume", DbType="Float")]
		public System.Nullable<double> InitialVolume
		{
			get
			{
				return this._InitialVolume;
			}
			set
			{
				if ((this._InitialVolume != value))
				{
					this.OnInitialVolumeChanging(value);
					this.SendPropertyChanging();
					this._InitialVolume = value;
					this.SendPropertyChanged("InitialVolume");
					this.OnInitialVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalVolume", DbType="Float")]
		public System.Nullable<double> FinalVolume
		{
			get
			{
				return this._FinalVolume;
			}
			set
			{
				if ((this._FinalVolume != value))
				{
					this.OnFinalVolumeChanging(value);
					this.SendPropertyChanging();
					this._FinalVolume = value;
					this.SendPropertyChanged("FinalVolume");
					this.OnFinalVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentFactor", DbType="Float")]
		public System.Nullable<double> AdjustmentFactor
		{
			get
			{
				return this._AdjustmentFactor;
			}
			set
			{
				if ((this._AdjustmentFactor != value))
				{
					this.OnAdjustmentFactorChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentFactor = value;
					this.SendPropertyChanged("AdjustmentFactor");
					this.OnAdjustmentFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemiQuant", DbType="Bit NOT NULL")]
		public bool SemiQuant
		{
			get
			{
				return this._SemiQuant;
			}
			set
			{
				if ((this._SemiQuant != value))
				{
					this.OnSemiQuantChanging(value);
					this.SendPropertyChanging();
					this._SemiQuant = value;
					this.SendPropertyChanged("SemiQuant");
					this.OnSemiQuantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reprocessed", DbType="Bit NOT NULL")]
		public bool Reprocessed
		{
			get
			{
				return this._Reprocessed;
			}
			set
			{
				if ((this._Reprocessed != value))
				{
					this.OnReprocessedChanging(value);
					this.SendPropertyChanging();
					this._Reprocessed = value;
					this.SendPropertyChanged("Reprocessed");
					this.OnReprocessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateByMSA", DbType="Bit NOT NULL")]
		public bool CalculateByMSA
		{
			get
			{
				return this._CalculateByMSA;
			}
			set
			{
				if ((this._CalculateByMSA != value))
				{
					this.OnCalculateByMSAChanging(value);
					this.SendPropertyChanging();
					this._CalculateByMSA = value;
					this.SendPropertyChanged("CalculateByMSA");
					this.OnCalculateByMSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(60)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom1", DbType="NVarChar(12)")]
		public string Custom1
		{
			get
			{
				return this._Custom1;
			}
			set
			{
				if ((this._Custom1 != value))
				{
					this.OnCustom1Changing(value);
					this.SendPropertyChanging();
					this._Custom1 = value;
					this.SendPropertyChanged("Custom1");
					this.OnCustom1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom2", DbType="NVarChar(12)")]
		public string Custom2
		{
			get
			{
				return this._Custom2;
			}
			set
			{
				if ((this._Custom2 != value))
				{
					this.OnCustom2Changing(value);
					this.SendPropertyChanging();
					this._Custom2 = value;
					this.SendPropertyChanged("Custom2");
					this.OnCustom2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom3", DbType="NVarChar(12)")]
		public string Custom3
		{
			get
			{
				return this._Custom3;
			}
			set
			{
				if ((this._Custom3 != value))
				{
					this.OnCustom3Changing(value);
					this.SendPropertyChanging();
					this._Custom3 = value;
					this.SendPropertyChanged("Custom3");
					this.OnCustom3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom4", DbType="NVarChar(12)")]
		public string Custom4
		{
			get
			{
				return this._Custom4;
			}
			set
			{
				if ((this._Custom4 != value))
				{
					this.OnCustom4Changing(value);
					this.SendPropertyChanging();
					this._Custom4 = value;
					this.SendPropertyChanged("Custom4");
					this.OnCustom4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFCalcType", DbType="TinyInt NOT NULL")]
		public byte CFCalcType
		{
			get
			{
				return this._CFCalcType;
			}
			set
			{
				if ((this._CFCalcType != value))
				{
					this.OnCFCalcTypeChanging(value);
					this.SendPropertyChanging();
					this._CFCalcType = value;
					this.SendPropertyChanged("CFCalcType");
					this.OnCFCalcTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostProcessParentId", DbType="Int NOT NULL")]
		public int PostProcessParentId
		{
			get
			{
				return this._PostProcessParentId;
			}
			set
			{
				if ((this._PostProcessParentId != value))
				{
					this.OnPostProcessParentIdChanging(value);
					this.SendPropertyChanging();
					this._PostProcessParentId = value;
					this.SendPropertyChanged("PostProcessParentId");
					this.OnPostProcessParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_ElementLine", Storage="_ElementLines", ThisKey="Id", OtherKey="SampleId")]
		public EntitySet<ElementLine> ElementLines
		{
			get
			{
				return this._ElementLines;
			}
			set
			{
				this._ElementLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ElementLines(ElementLine entity)
		{
			this.SendPropertyChanging();
			entity.Sample = this;
		}
		
		private void detach_ElementLines(ElementLine entity)
		{
			this.SendPropertyChanging();
			entity.Sample = null;
		}
	}
}
#pragma warning restore 1591
